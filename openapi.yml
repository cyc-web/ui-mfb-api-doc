openapi: '3.0.2'
info:
  title: UI-MFB API DOCS
  description: This web app is a banking app where users can carryout money transactions
  version: "1.0"
  termsOfService: https://terms.ui-mfb.com
  contact:
    name: Oladejo Aderopo
    url: http://royalcode.com.ng/resume
    email: oluropoadewale@gmail.com
servers:
  - url: https://api.ui-mfb.com
    description: base url

paths:
  /register:
    post:
      summary: create new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /login:
    post:
      requestBody:
        description: "login to get started"
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/ServerError'
  /forgot_password:
    post:
      requestBody:
        description: "Reset your password"
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                email:
                  type: string
                
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/ServerError'
  
  /change_password:
    post:
      requestBody:
        description: "Change password"
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                code:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/ServerError'
  /changePassword:
    post:
      security:
        - bearerAuth: []
      
      requestBody:
        description: "Change current password"
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                current_password:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/ServerError'
  /logout:
    post:
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK 
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /profile:
    get:
      security:
        - bearerAuth: []
      description: 'Get current login user'
      responses:
        '200':
          description: Ok
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
                  id:
                    type: integer
                  created_at:
                    type: timestamp   
                  updated_at:
                    type: timestamp
                  biography:
                    type: string
                  social_media:
                    type: array
                  profilePicture:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/ServerError'
  /profile/update:
    post:
      security:
        - bearerAuth: []
      
      requestBody:
        description: "login to get started"
        required: true
        content:
          "application/json":
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                phone:
                  type: string
                biography:
                  type: string
                social_media:
                  type: array
                  example: ['facebook', 'twitter']
                profilePicture:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized' 
        '404':
          $ref: '#/components/responses/NotFound' 
        '500':
          $ref: '#/components/responses/ServerError'
  
      responses:
        '201':
          description: Ok 
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    

components:
  schemas:
    User:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
          phone:
            type: string
          address:
            type: string
          password:
            type: string
          password_confirmation:
            type: string
          user_type:
            type: string
            enum:
              - "Admin"
              - "Author"
              - "Reader"
              - "Publisher"
          referred_by:
            type: string
          role:
            type: array
            items:
              default:
                id:
                  type: integer
                name:
                  type: string
                created_at:
                  type: timestamp
        required: ["name", "email", "phone", "address", "password", password_confirmation, "user_type"]
    
        
    Wallet:
      type: object
      properties:
        balance:
          type: number
        account_no:
          type: string
        account_name:
          type: string
        bank_name:
          type: string
   
    Transaction:
      type: object
      properties:
        purpose:
          type: string
        amount:
          type: number
        ref_no:
          type: string
        status:
          type: string
        quantity:
          type: string
        bookType:
          type: array
          enum:
            - soft copy
            - hard copy
        book_id:
          type: number
    # Schema for error response body
    Error:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      required:
        - status
        - error
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: You are not allowed to access the specified resource 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnProcessAble:
      description: The specified resource cannot be processed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: token 
security:
  - bearerAuth: [] 

